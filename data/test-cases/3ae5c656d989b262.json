{"uid":"3ae5c656d989b262","name":"Просмотр сделки","fullName":"tests_api.test_deals.TestApiDeals#test_view_deal","historyId":"5c1f0a00edf765cda090b7198220d77e","time":{"start":1710262664002,"stop":1710262664612,"duration":610},"status":"failed","statusMessage":"AssertionError: Ожидался статус-код 200, но был получен 500","statusTrace":"self = <tests_api.test_deals.TestApiDeals object at 0x7f824ce6ba00>\nassertion = <class 'tests_api.utils.asserts.Assertion'>\ndeals_api = <tests_api.api.deals.DealsApi object at 0x7f824aa3ef20>\n\n    @allure.title(\"Просмотр сделки\")\n    @allure.feature(\"[API] Сделки\")\n    @allure.step(\"отправляем запрос GET\")\n    def test_view_deal(self, assertion, deals_api) -> None:\n        resp = deals_api.deals_view(\n            id=self.test_create_deal_with_client(), access_token=env_vars.ACCESS_TOKEN\n        )\n        print(resp.text)\n>       assertion(resp).should_have_status_code(200)\n\ntests_api/test_deals.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests_api.utils.asserts.Assertion object at 0x7f824aa3d870>\nexpected_status_code = 200, error_message = None\n\n    def should_have_status_code(self, expected_status_code: int, error_message=None):\n        with allure.step(f\"Проверка статус-кода {expected_status_code}\"):\n            if self.response is None:\n                raise AssertionError(\"Response is None\")\n    \n>           assert self.response.status_code == expected_status_code, (\n                error_message\n                if error_message is not None\n                else f\"Ожидался статус-код {expected_status_code}, \"\n                f\"но был получен {self.response.status_code}\"\n            )\nE           AssertionError: Ожидался статус-код 200, но был получен 500\n\ntests_api/utils/asserts.py:17: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1710262659846,"stop":1710262659847,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"base_url","time":{"start":1710262659847,"stop":1710262659847,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_verify_url","time":{"start":1710262659847,"stop":1710262659847,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_session_faker","time":{"start":1710262659847,"stop":1710262659919,"duration":72},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"delete_output_dir","time":{"start":1710262659847,"stop":1710262659847,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"assertion","time":{"start":1710262659919,"stop":1710262659919,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"env","time":{"start":1710262659919,"stop":1710262659919,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"base_url_showcase","time":{"start":1710262659920,"stop":1710262659920,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser_type_launch_args","time":{"start":1710262659920,"stop":1710262659920,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"playwright","time":{"start":1710262659920,"stop":1710262660201,"duration":281},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser_type","time":{"start":1710262660202,"stop":1710262660202,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"launch_browser","time":{"start":1710262660202,"stop":1710262660202,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser","time":{"start":1710262660202,"stop":1710262660414,"duration":212},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"device","time":{"start":1710262660415,"stop":1710262660415,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser_context_args","time":{"start":1710262660415,"stop":1710262660415,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"context","time":{"start":1710262663964,"stop":1710262663969,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"page","time":{"start":1710262663969,"stop":1710262664000,"duration":31},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"screenshot_on_failure","time":{"start":1710262664000,"stop":1710262664000,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"api_client_showcase","time":{"start":1710262664000,"stop":1710262664001,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"deals_api","time":{"start":1710262664001,"stop":1710262664001,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Ожидался статус-код 200, но был получен 500","statusTrace":"self = <tests_api.test_deals.TestApiDeals object at 0x7f824ce6ba00>\nassertion = <class 'tests_api.utils.asserts.Assertion'>\ndeals_api = <tests_api.api.deals.DealsApi object at 0x7f824aa3ef20>\n\n    @allure.title(\"Просмотр сделки\")\n    @allure.feature(\"[API] Сделки\")\n    @allure.step(\"отправляем запрос GET\")\n    def test_view_deal(self, assertion, deals_api) -> None:\n        resp = deals_api.deals_view(\n            id=self.test_create_deal_with_client(), access_token=env_vars.ACCESS_TOKEN\n        )\n        print(resp.text)\n>       assertion(resp).should_have_status_code(200)\n\ntests_api/test_deals.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests_api.utils.asserts.Assertion object at 0x7f824aa3d870>\nexpected_status_code = 200, error_message = None\n\n    def should_have_status_code(self, expected_status_code: int, error_message=None):\n        with allure.step(f\"Проверка статус-кода {expected_status_code}\"):\n            if self.response is None:\n                raise AssertionError(\"Response is None\")\n    \n>           assert self.response.status_code == expected_status_code, (\n                error_message\n                if error_message is not None\n                else f\"Ожидался статус-код {expected_status_code}, \"\n                f\"но был получен {self.response.status_code}\"\n            )\nE           AssertionError: Ожидался статус-код 200, но был получен 500\n\ntests_api/utils/asserts.py:17: AssertionError","steps":[{"name":"отправляем запрос GET","time":{"start":1710262664002,"stop":1710262664611,"duration":609},"status":"failed","statusMessage":"AssertionError: Ожидался статус-код 200, но был получен 500\n","statusTrace":"  File \"/usr/local/lib/python3.10/dist-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/builds/2uit/Chmaki_autotests/tests_api/test_deals.py\", line 33, in test_view_deal\n    assertion(resp).should_have_status_code(200)\n  File \"/builds/2uit/Chmaki_autotests/tests_api/utils/asserts.py\", line 17, in should_have_status_code\n    assert self.response.status_code == expected_status_code, (\n","steps":[{"name":"отправляем запрос POST","time":{"start":1710262664002,"stop":1710262664285,"duration":283},"status":"passed","steps":[{"name":"На роут /deal/create-with-client","time":{"start":1710262664002,"stop":1710262664285,"duration":283},"status":"passed","steps":[{"name":"Тестовые данные '{'phone': '79838578812', 'name': '<bound method Provider.name of <faker.providers.person.en_US.Provider object at 0x7f824aa3fb80>>', 'type': 'sell'}'","time":{"start":1710262664016,"stop":1710262664284,"duration":268},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Проверка cтатуса кода","time":{"start":1710262664284,"stop":1710262664284,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":3,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Отправить GET запрос на api/deal/2924","time":{"start":1710262664285,"stop":1710262664611,"duration":326},"status":"passed","steps":[{"name":"request","time":{"start":1710262664285,"stop":1710262664611,"duration":326},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"method","value":"'GET'"},{"name":"url","value":"'https://dev.agentum.pro/backend/api/deal/2924'"},{"name":"timeout","value":"5000"},{"name":"params","value":"None"},{"name":"headers","value":"{'Authorization': 'Bearer \"248|YwQogs0aDUHzYIgAIN88OBaTDiKesDmAdciD9vkz\"'}"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Проверка статус-кода 200","time":{"start":1710262664611,"stop":1710262664611,"duration":0},"status":"failed","statusMessage":"AssertionError: Ожидался статус-код 200, но был получен 500\n","statusTrace":"  File \"/builds/2uit/Chmaki_autotests/tests_api/utils/asserts.py\", line 17, in should_have_status_code\n    assert self.response.status_code == expected_status_code, (\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[{"name":"assertion","value":"<class 'tests_api.utils.asserts.Assertion'>"},{"name":"deals_api","value":"<tests_api.api.deals.DealsApi object at 0x7f824aa3ef20>"}],"stepsCount":7,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"4a67c5775f86f5b","name":"log","source":"4a67c5775f86f5b.txt","type":"text/plain","size":121},{"uid":"d164163a4691308d","name":"stdout","source":"d164163a4691308d.txt","type":"text/plain","size":6610}],"parameters":[],"stepsCount":8,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"api_client_showcase::0","time":{"start":1710262664617,"stop":1710262664617,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"screenshot_on_failure::0","time":{"start":1710262664618,"stop":1710262664709,"duration":91},"status":"passed","steps":[],"attachments":[{"uid":"211e329bd2974275","name":"screenshot_test_view_deal","source":"211e329bd2974275.png","type":"image/png","size":5320}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"page::0","time":{"start":1710262664710,"stop":1710262664710,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"context::0","time":{"start":1710262664711,"stop":1710262664716,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser::0","time":{"start":1710262673936,"stop":1710262673959,"duration":23},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"playwright::0","time":{"start":1710262673962,"stop":1710262673968,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"subSuite","value":"API запросы по сделке"},{"name":"parentSuite","value":"Чмаки. API"},{"name":"suite","value":"API тесты"},{"name":"feature","value":"[API] Сделки"},{"name":"tag","value":"api"},{"name":"host","value":"runner-vlhmfsk-project-154-concurrent-0"},{"name":"thread","value":"59-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests_api.test_deals"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser_name","value":"'chromium'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["api"]},"source":"3ae5c656d989b262.json","parameterValues":["'chromium'"]}