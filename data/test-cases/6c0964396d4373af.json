{"uid":"6c0964396d4373af","name":"Запрос потверждение номера телефона","fullName":"tests_api.test_authorization_api.TestApiAuth#test_confirm_phone_number","historyId":"f5e97b734af872c640d0a90e4e103353","time":{"start":1703092335117,"stop":1703092335417,"duration":300},"status":"failed","statusMessage":"AssertionError: Status code is not 200","statusTrace":"self = <tests_api.test_authorization_api.TestApiAuth object at 0x7f0ba69b9300>\n\n    @allure.title(\"Запрос потверждение номера телефона\")\n    @allure.feature(\"[API] Авторизация\")\n    @allure.step(\"отправляем запрос POST\")\n    def test_confirm_phone_number(self) -> None:\n        phone_number = \"79603848671\"\n        with allure.step(f\"На роут {Routes.AUTH}\"):\n            url = config.BASE_URL + \"api/auth/get-enter-code\"\n            payload = {\"phone\": f\"{phone_number}\"}\n        headers = {\"Authorization\": config.AUTH_TOKEN}\n        with allure.step(\"Отправить POST запрос\"):\n            try:\n                response = requests.request(\"POST\", url, headers=headers, json=payload)\n            except requests.exceptions.RequestException as e:\n                logger.error(f\"Request failed: {str(e)}\")\n                pytest.fail(f\"Request failed: {str(e)}\")\n        with allure.step(\"Проверка cтатуса кода\"):\n>           assert_status_code(response, 200)\n\ntests_api/test_authorization_api.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 200\n\n    @allure.step(\"Проверка статуса кода\")\n    def assert_status_code(response, expected_status_code):\n        assert (\n>           response.status_code == expected_status_code\n        ), f\"Status code is not {expected_status_code}\"\nE       AssertionError: Status code is not 200\n\ntests_api/utils/asserts.py:11: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1703092332736,"stop":1703092332736,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"base_url","time":{"start":1703092332736,"stop":1703092332736,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"pytestconfig","time":{"start":1703092332736,"stop":1703092332736,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"delete_output_dir","time":{"start":1703092332736,"stop":1703092332736,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_session_faker","time":{"start":1703092332736,"stop":1703092332795,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"playwright","time":{"start":1703092332795,"stop":1703092333082,"duration":287},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser_type_launch_args","time":{"start":1703092332795,"stop":1703092332795,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"launch_browser","time":{"start":1703092333083,"stop":1703092333083,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser_type","time":{"start":1703092333083,"stop":1703092333083,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser","time":{"start":1703092333083,"stop":1703092333306,"duration":223},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser_context_args","time":{"start":1703092333306,"stop":1703092333306,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"device","time":{"start":1703092333306,"stop":1703092333306,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"context","time":{"start":1703092335080,"stop":1703092335084,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"page","time":{"start":1703092335085,"stop":1703092335116,"duration":31},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"screenshot_on_failure","time":{"start":1703092335116,"stop":1703092335116,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Status code is not 200","statusTrace":"self = <tests_api.test_authorization_api.TestApiAuth object at 0x7f0ba69b9300>\n\n    @allure.title(\"Запрос потверждение номера телефона\")\n    @allure.feature(\"[API] Авторизация\")\n    @allure.step(\"отправляем запрос POST\")\n    def test_confirm_phone_number(self) -> None:\n        phone_number = \"79603848671\"\n        with allure.step(f\"На роут {Routes.AUTH}\"):\n            url = config.BASE_URL + \"api/auth/get-enter-code\"\n            payload = {\"phone\": f\"{phone_number}\"}\n        headers = {\"Authorization\": config.AUTH_TOKEN}\n        with allure.step(\"Отправить POST запрос\"):\n            try:\n                response = requests.request(\"POST\", url, headers=headers, json=payload)\n            except requests.exceptions.RequestException as e:\n                logger.error(f\"Request failed: {str(e)}\")\n                pytest.fail(f\"Request failed: {str(e)}\")\n        with allure.step(\"Проверка cтатуса кода\"):\n>           assert_status_code(response, 200)\n\ntests_api/test_authorization_api.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 200\n\n    @allure.step(\"Проверка статуса кода\")\n    def assert_status_code(response, expected_status_code):\n        assert (\n>           response.status_code == expected_status_code\n        ), f\"Status code is not {expected_status_code}\"\nE       AssertionError: Status code is not 200\n\ntests_api/utils/asserts.py:11: AssertionError","steps":[{"name":"отправляем запрос POST","time":{"start":1703092335117,"stop":1703092335416,"duration":299},"status":"failed","statusMessage":"AssertionError: Status code is not 200\n","statusTrace":"  File \"/usr/local/lib/python3.10/dist-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/builds/2uit/Chmaki_autotests/tests_api/test_authorization_api.py\", line 38, in test_confirm_phone_number\n    assert_status_code(response, 200)\n  File \"/usr/local/lib/python3.10/dist-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/builds/2uit/Chmaki_autotests/tests_api/utils/asserts.py\", line 11, in assert_status_code\n    response.status_code == expected_status_code\n","steps":[{"name":"На роут /auth/get-enter-code","time":{"start":1703092335117,"stop":1703092335117,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Отправить POST запрос","time":{"start":1703092335117,"stop":1703092335416,"duration":299},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Проверка cтатуса кода","time":{"start":1703092335416,"stop":1703092335416,"duration":0},"status":"failed","statusMessage":"AssertionError: Status code is not 200\n","statusTrace":"  File \"/builds/2uit/Chmaki_autotests/tests_api/test_authorization_api.py\", line 38, in test_confirm_phone_number\n    assert_status_code(response, 200)\n  File \"/usr/local/lib/python3.10/dist-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/builds/2uit/Chmaki_autotests/tests_api/utils/asserts.py\", line 11, in assert_status_code\n    response.status_code == expected_status_code\n","steps":[{"name":"Проверка статуса кода","time":{"start":1703092335416,"stop":1703092335416,"duration":0},"status":"failed","statusMessage":"AssertionError: Status code is not 200\n","statusTrace":"  File \"/usr/local/lib/python3.10/dist-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/builds/2uit/Chmaki_autotests/tests_api/utils/asserts.py\", line 11, in assert_status_code\n    response.status_code == expected_status_code\n","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [400]>"},{"name":"expected_status_code","value":"200"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":4,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"screenshot_on_failure::0","time":{"start":1703092335423,"stop":1703092335516,"duration":93},"status":"passed","steps":[],"attachments":[{"uid":"a3addc8e0488b1ad","name":"screenshot_test_confirm_phone_number","source":"a3addc8e0488b1ad.png","type":"image/png","size":5320}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"page::0","time":{"start":1703092335517,"stop":1703092335517,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"context::0","time":{"start":1703092335518,"stop":1703092335524,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser::0","time":{"start":1703092340842,"stop":1703092340864,"duration":22},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"playwright::0","time":{"start":1703092340866,"stop":1703092340874,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"feature","value":"[API] Авторизация"},{"name":"subSuite","value":"API запросы по авторизации"},{"name":"parentSuite","value":"Чмаки. API"},{"name":"suite","value":"API тесты"},{"name":"tag","value":"api"},{"name":"host","value":"runner-vlhmfsk-project-154-concurrent-0"},{"name":"thread","value":"47-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests_api.test_authorization_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser_name","value":"'chromium'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["api"]},"source":"6c0964396d4373af.json","parameterValues":["'chromium'"]}